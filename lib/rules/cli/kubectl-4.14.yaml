:global_options:
  :api_version: --api-version=<value>
  :ca: --certificate-authority=<value>
  :cluster: --cluster=<value>
  :config: --kubeconfig=<value>
  :context: --context=<value>
  :h: -h
  :help: --help
  :user: --user=<value>
  :skip_tls_verify: --insecure-skip-tls-verify=<value>
  :match-server-version: --match-server-version=<value>
  :namespace: --namespace=<value>
  :n: -n <value>
  :loglevel: --loglevel=<value>
  :log_dir: --log_dir=<value>
  :log_flush_frequency: --log_flush_frequency=<value>
  :logtostderr: --logtostderr=<value>
  :request-timeout: --request-timeout=<value>
  :server: --server=<value>
  :stderrthreshold: --stderrthreshold=<value>
  :token: --token=<value>
  :as: --as=<value>
  :as_group: --as-group=<value>
:options:
  :cmd: kubectl options
:version:
  :cmd: kubectl version
  :options:
    :client: --client
    :output: --output=<value>
:annotate:
  :cmd: kubectl annotate
  :options:
    :resource: <value>
    :resourcename: <value>
    :keyval: <value>
    :all: --all=<value>
    :noheadersfalse: --no-headers=<value>
    :o: -o <value>
    :output: --output=<value>
    :outputversion: --output-version=<value>
    :overwrite: --overwrite=<value>
    :resourceversion: --resource-version=<value>
    :t: -t <value>
    :template: --template=<value>
:apply:
  :cmd: kubectl apply
  :options:
    :f: -f <value>
    :force: --force=<value>
    :grace-period: --grace-period=<value>
    :overwrite: --overwrite=<value>
:apply_set_last_applied:
  :cmd: kubectl apply set-last-applied
  :options:
    :f: -f <value>
:apply_view_last_applied:
  :cmd: kubectl apply view-last-applied
  :options:
    :resource: <value>
    :resource_name: <value>
:attach:
  :cmd: kubectl attach
  :options:
    :cmd_name: <value>
    :pod: <value>
    :c: -c <value>
    :i: -i
    :t: -t
    :container: --container=<value>
    :stdin: --stdin=<value>
    :tty: --tty=<value>
:autoscale:
  :cmd: kubectl autoscale <name>
  :options:
    :cpu-percent: --cpu-percent=<value>
    :min: --min=<value>
    :max: --max=<value>
:config:
  :cmd: kubectl config
  :options:
    :subcommand: <value>
:config_set:
  :cmd: kubectl config set <prop_name> <prop_value>
:config_set_cluster:
  :cmd: kubectl config set-cluster <name>
  :options:
    :cert: --certificate-authority=<value>
    :embed: --embed-certs=<value>
    :server: --server=<value>
:config_set_context:
  :cmd: kubectl config set-context <name>
  :options:
    :cluster: --cluster=<value>
    :namespace: --namespace=<value>
    :user: --user=<value>
:config_set_creds:
  :cmd: kubectl config set-credentials <name>
  :options:
    :cert:  --client-certificate=<value>
    :key:  --client-key=<value>
    :embed:  --embed-certs=<value>
    :password:  --password=<value>
    :token: --token=<value>
    :user:  --username=<value>
:config_use_context:
  :cmd: kubectl config use-context <name>
:config_unset:
  :cmd: kubectl config unset <prop_name>
:config_view:
  :cmd: kubectl config view
  :options:
    :output: --output=<value>
    :flatten: --flatten
    :minify: --minify
    :raw: --raw
  :expected:
    - "apiVersion: v"
    - "kind: Config"
  :optional_properties:
    :current_context: !ruby/regexp '/^current-context: (.+)/'
:convert:
  :cmd: kubectl convert
  :options:
    :file: -f <value>
    :local: --local=<value>
    :o: -o <value>
    :output_version: --output-version=<value>
    :recursive: --recursive=<value>
:cp:
  :cmd: kubectl cp
  :options:
    :c: -c=<value>
    :source: <value>
    :dest: <value>
:create:
  :cmd: kubectl create
  :options:
    :f: -f <value>
    :filename: --filename=<value>
    :record: --record=<value>
:create_configmap:
  :cmd: kubectl create configmap
  :options:
    :name: <value>
    :from_file: --from-file=<value>
    :from_literal: --from-literal=<value>
:create_deployment:
  :cmd: kubectl create deployment <name>
  :options:
    :allow_missing_template_keys: --allow-missing-template-keys=<value>
    :dry_run: --dry-run=<value>
    :generator: --generator=<value>
    :image: --image=<value>
    :output: --output=<value>
    :save_config: --save-config=<value>
    :template: --template=<value>
    :validate: --validate=<value>
:create_quota:
  :cmd: kubectl create quota <name>
  :options:
    :dry-run: --dry-run=<value>
    :hard: --hard=<value>
    :scopes: --scopes=<value>
    :output: --output=<value>
:create_secret:
  :cmd: kubectl create secret <secret_type>
  :options:
    :name: <value>
    :docker_email: --docker-email=<value>
    :docker_password: --docker-password=<value>
    :docker_server: --docker-server=<value>
    :docker_username: --docker-username=<value>
    :dry_run: --dry-run=<value>
    :from_literal: --from-literal=<value>
    :from_file: --from-file=<value>
    :generator: --generator=<value>
    :output: --output=<value>
    :save_config: --save-config=<value>
    :type: --type=<value>
    :cert: --cert=<value>
    :key: --key=<value>
:create_service:
  :cmd: kubectl create service <createservice_type>
  :options:
      :clusterip: --clusterip=<value>
      :name: <value>
      :nodeport: --node-port=<value>
      :tcp: --tcp=<value>
      :dry_run: --dry-run=<value>
:create_service_loadbalancer:
  :cmd: kubectl create service loadbalancer <name>
  :options:
    :tcp: --tcp=<value>
:create_serviceaccount:
  :cmd: kubectl create serviceaccount <serviceaccount_name>
:delete:
  :cmd: kubectl delete
  :options:
    :all: --all
    #The following 'all' can be used with selectors, like the -l flag.
    :all_no_dash: all
    :cascade: --cascade=<value>
    :f: -f <value>
    :force: --force=<value>
    :grace_period: --grace-period=<value>
    :l: -l <value>
    :object_name_or_id: <value>
    :object_type: <value>
:describe:
  :cmd: kubectl describe <resource>
  :options:
    :name: <value>
    :l: -l <value>
    :f: -f <value>
    :selector: --selector=<value>
:exec:
  # reorder global_options and options to allow specifying exec command
  :cmd: kubectl exec <pod> <global_options> <options>
  :options:
    :c: -c <value>
    :container: --container=<value>
    :stdin: --stdin=<value>
    :tty: --tty=<value>
    :t: -t
    :i: -i
    :oc_opts_end: --
    :exec_command: <value>
    :exec_command_arg: <value>
:explain:
  :cmd: kubectl explain
  :options:
    :resource: <value>
:expose:
  :cmd: kubectl expose <resource> <resource_name>
  :options:
    :generator: --generator=<value>
    :external_ip: --external-ip=<value>
    :path: --path=<value>
    :port: --port=<value>
    :protocol: --protocol=<value>
    :template: --template=<value>
    :target_port: --target-port=<value>
    :type: --type=<value>
    :name: --name=<value>
    :selector: --selector=<value>
    :output: --output=<value>
    :o: -o <value>
    :path: --path=<value>
    :hostname: --hostname=<value>
    :wildcardpolicy: --wildcard-policy=<value>
    :help: --help
:get:
  :cmd: kubectl get <resource>
  :options:
    :a: --show-all=<value>
    :all_namespaces: --all-namespaces=<value>
    :export: --export=<value>
    :fieldSelector: --field-selector=<value>
    :L: -L <value>
    :l: -l <value>
    :no_headers: --no-headers=<value>
    :o: -o <value>
    :output: --output=<value>
    :raw: --raw=<value>
    :resource_name: <value>
    :show_label: --show-labels=<value>
    :sort_by: --sort-by=<value>
    :template: --template=<value>
    :w: --watch=<value>
:label:
  :cmd: kubectl label <resource>
  :options:
    :all: --all=<value>
    :key_val: <value>
    :name: <value>
    :o: -o <value>
    :overwrite: --overwrite=<value>
    :l: -l <value>
:logs:
  :cmd: kubectl logs <resource_name>
  :options:
    :c: -c <value>
    :f: -f
    :limit-bytes: --limit-bytes <value>
    :p: -p
    :since: --since <value>
    :since-time: --since-time <value>
    :tail: --tail <value>
    :timestamps: --timestamps
    :version: --version <value>
:patch:
  :cmd: kubectl patch <resource>
  :options:
    :resource_name: <value>
    :p: -p <value>
    :type: --type=<value>
:plugin:
  :cmd: kubectl plugin
  :options:
    :cmd_name: <value>
    :cmd_flag: <value>
    :cmd_flag_val: <value>
:port_forward:
  :cmd: kubectl port-forward
  :options:
    :pod: <value>
    :port_spec: <value>
:proxy:
  :cmd: kubectl proxy
  :options:
    :accept_hosts: --accept-hosts=<value>
    :accept_paths: --accept-paths=<value>
    :address: --address=<value>
    :api_prefix: --api-prefix=<value>
    :disable_filter: --disable-filter=<value>
    :port: --port=<value>
    :reject_methods: --reject-methods=<value>
    :reject_paths: --reject-paths=<value>
    :unix_socket: --unix-socket=<value>
    :www: --www=<value>
    :www_prefix: --www-prefix=<value>
:replace:
  :cmd: kubectl replace
  :options:
    :f: -f <value>
    :force: --force
    :output: --output=<value>
    :cascade: --cascade
    :grace_period: --grace-period=<value>
:rollout_history:
  :cmd: kubectl rollout history <resource>
  :options:
    :resource_name: <value>
    :revision: --revision=<value>
:rollout_pause:
  :cmd: kubectl rollout pause <resource> <name>
  :options:
    :f: -f <value>
:rollout_resume:
  :cmd: kubectl rollout resume <resource> <name>
  :options:
    :f: -f <value>
:rollout_status:
  :cmd: kubectl rollout status <resource> <name>
  :options:
    :f: -f <value>
    :w: --watch=<value>
:rollout_undo:
  :cmd: kubectl rollout undo <resource>
  :options:
    :resource_name: <value>
    :to_revision: --to-revision=<value>
:run:
  :cmd: kubectl run <name> <global_options> <options>
  :options:
    :attach: --attach=<value>
    :command: --command=<value>
    :cmd: <value>
    :image: --image=<value>
    :port: --port <value>
    :replicas: --replicas <value>
    :generator: --generator=<value>
    :limits: --limits=<value>
    :requests: --requests=<value>
    :schedule: --schedule=<value>
    :serviceaccount: --serviceaccount=<value>
    :sleep:  -- sleep <value>
    :oc_opt_end: --
    :dry_run: --dry-run
    :-i: --stdin=<value>
    :-l: --labels=<value>
    :-t: --template=<value>
    :-o: --output=<value>
    :overrides: --overrides=<value>
    :restart: --restart=<value>
    :tty: --tty=<value>
    :env: --env=<value>
:scale:
  :cmd: kubectl scale <resource> <name>
  :options:
    :current_replicas: --current-replicas=<value>
    :replicas:  --replicas=<value>
    :resource_ver: --resource-version=<value>
    :timeout: --timeout=<value>
:set_env:
  :cmd: kubectl set env
  :options:
    :all: --all=<value>
    :env_name: <value>
    :from: --from=<value>
    :keyval: <value>
    :list: --list=<value>
    :prefix: --prefix=<value>
    :resource: <value>
    :c: -c <value>
    :e: -e <value>
    :o: -o <value>
    :f: -f <value>
    :overwrite: --overwrite=<value>
:set_image:
  :cmd: kubectl set image
  :options:
    :keyval: <value>
    :l: -l <value>
    :resource: <value>
    :type_name: <value>
    :container_image: <value>
    :all: --all=<value>
    :filename: --filename=<value>
    :local: --local=<value>
    :source: --source=<value>
    :output: --output=<value>
    :record: --record=<value>
    :selector: --selector=<value>
:set_resources:
  :cmd: kubectl set resources
  :options:
    :resource: <value>
    :resourcename: <value>
    :limits: --limits=<value>
    :requests: --requests=<value>
    :local: --local
    :dryrun: --dry-run
    :c: -c <value>
    :f: -f <value>
    :o: -o <value>
:wait:
  :cmd: kubectl wait
  :options:
    :resource: <value>
    :resource_name: <value>
    :for:  --for=<value>
    :l:  -l=<value>
    :timeout:  --timeout=<value>
#################### admin commands section
:create_rolebinding:
  :cmd: kubectl create rolebinding <name>
  :options:
    :role: --role=<value>
:create_clusterrolebinding:
  :cmd: kubectl create clusterrolebinding <name>
  :options:
    :clusterrole: --clusterrole=<value>
